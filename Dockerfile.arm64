# Jetson CUDA 
# https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-cuda/tags
ARG CUDA_VERSION=12.2.12
ARG CUDA_DOCKER_ARCH=arm64
#ARG BASE_CUDA_DEV_CONTAINER=nvcr.io/nvidia/l4t-cuda:${CUDA_VERSION}-devel
#ARG BASE_CUDA_RUN_CONTAINER=nvcr.io/nvidia/l4t-cuda:${CUDA_VERSION}-runtime

# Test
ARG BASE_CUDA_DEV_CONTAINER=nvcr.io/nvidia/l4t-cuda:12.2.2-devel-arm64-ubuntu22.04
ARG BASE_CUDA_RUN_CONTAINER=nvcr.io/nvidia/l4t-cuda:12.2.2-devel-arm64-ubuntu22.04

# Setup build container
FROM ${BASE_CUDA_DEV_CONTAINER} AS build
RUN apt-get -y update && apt-get -y install build-essential git libcurl4-openssl-dev
WORKDIR /app
COPY . .

# Make llama-server
ENV CUDA_DOCKER_ARCH=${CUDA_DOCKER_ARCH}
ENV GGML_CUDA=1
ENV LLAMA_CURL=1
RUN make -j$(nproc) llama-server

# Setup runtime container
FROM ${BASE_CUDA_RUN_CONTAINER} AS runtime
RUN apt-get -y update && apt-get  -y install libcurl4-openssl-dev libgomp1 curl
COPY --from=build /app/llama.cpp/llama-server /llama-server

# Expose
HEALTHCHECK CMD [ "curl", "-f", "http://localhost:8080/health" ]
ENTRYPOINT [ "/llama-server" ]
